{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "LCDWallet API Documentation",
    "description": "Documentation for the LCDWallet API"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/wallet/create/keystore": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseSuccess"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "description": "Password for encrypting the keystore file",
          "type": "object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordRequest"
              }
            }
          }
        }
      }
    },
    "/wallet/access/keystore": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessWalletResponseSuccess"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccessWalletResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessWalletResponseError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccessWalletResponseError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "description": "Password for encrypting the keystore file",
          "type": "object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessKeystoreRequest"
              }
            }
          }
        }
      }
    },
    "/wallet/generate/mnemonic": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MnemonicResponseSuccess"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MnemonicResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MnemonicResponseError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MnemonicResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/wallet/generate/question": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "description": "",
        "parameters": [
          {
            "name": "word",
            "in": "query",
            "description": "The given word.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionResponseSuccess"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionResponseError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/wallet/access/mnemonic": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Access wallet using mnemonic phrase",
        "description": "Generate private and public keys for a wallet using a mnemonic phrase.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessMnemonicResponseSuccess"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccessMnemonicResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessMnemonicResponseError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccessMnemonicResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "description": "Mnemonic phrases (12 words)",
          "type": "object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessMnemonicRequestBody"
              }
            }
          }
        }
      }
    },
    "/wallet/access/privatekey": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Access wallet using private key",
        "description": "Generate public key for a wallet using a private key.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPrivateKeyResponseSuccess"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPrivateKeyResponseSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPrivateKeyResponseError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPrivateKeyResponseError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "description": "Private key in hexadecimal format",
          "type": "object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessPrivateKeyRequestBody"
              }
            }
          }
        }
      }
    },
    "/blocks/latest": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "Get the latest 5 blocks",
        "description": "Returns the latest 5 blocks from the blockchain.",
        "responses": {
          "200": {
            "description": "An array of the latest blocks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "array"
                    },
                    "items": {
                      "$ref": "#/components/schemas/Block"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "array"
                    },
                    "items": {
                      "$ref": "#/components/schemas/Block"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blocks/mine": {
      "post": {
        "tags": [
          "Blocks"
        ],
        "summary": "Mine a new block",
        "description": "Creates and adds a new block to the blockchain if the validator is authorized.",
        "parameters": [
          {
            "name": "validatorAddress",
            "in": "query",
            "description": "Public key of the validator",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The newly mined block.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Invalid validator address"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Invalid validator address"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "An error occurred while mining the block"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "An error occurred while mining the block"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blocks/all": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "Get All Blocks",
        "description": "Retrieves all blocks in the blockchain, starting from the genesis block.",
        "responses": {
          "200": {
            "description": "An array containing all blocks in the blockchain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "array"
                    },
                    "items": {
                      "$ref": "#/components/schemas/Block"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "array"
                    },
                    "items": {
                      "$ref": "#/components/schemas/Block"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred while fetching the blocks."
          }
        }
      }
    },
    "/blocks/index/{index}": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "Get Block By Index",
        "description": "Retrieves a block by its index in the blockchain.",
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "description": "Index of the block to retrieve.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested block.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "404": {
            "description": "Block not found."
          }
        }
      }
    },
    "/blocks/hash/{hash}": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "Get Block By Hash",
        "description": "Retrieves a block by its hash value.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "Hash of the block to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested block.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "404": {
            "description": "Block not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "PasswordRequest"
        }
      },
      "WalletResponseSuccess": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "string"
          },
          "downloadUrl": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "WalletResponseSuccess"
        }
      },
      "WalletResponseError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "WalletResponseError"
        }
      },
      "AccessKeystoreRequest": {
        "type": "object",
        "properties": {
          "iv": {
            "type": "string",
            "example": "string"
          },
          "salt": {
            "type": "string",
            "example": "string"
          },
          "encryptedData": {
            "type": "string",
            "example": "string"
          },
          "password": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AccessKeystoreRequest"
        }
      },
      "AccessWalletResponseSuccess": {
        "type": "object",
        "properties": {
          "privateKey": {
            "type": "string",
            "example": "string"
          },
          "publicKey": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AccessWalletResponseSuccess"
        }
      },
      "AccessWalletResponseError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AccessWalletResponseError"
        }
      },
      "MnemonicResponseSuccess": {
        "type": "object",
        "properties": {
          "mnemonic": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "MnemonicResponseSuccess"
        }
      },
      "MnemonicResponseError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "error": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "MnemonicResponseError"
        }
      },
      "QuestionResponseSuccess": {
        "type": "object",
        "properties": {
          "question": {
            "type": "array",
            "example": [
              "option1",
              "option2",
              "option3"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "xml": {
          "name": "QuestionResponseSuccess"
        }
      },
      "QuestionResponseError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "QuestionResponseError"
        }
      },
      "AccessMnemonicRequestBody": {
        "type": "object",
        "properties": {
          "mnemonic": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AccessMnemonicRequestBody"
        }
      },
      "AccessMnemonicResponseSuccess": {
        "type": "object",
        "properties": {
          "privateKey": {
            "type": "string",
            "example": "string"
          },
          "publicKey": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AccessMnemonicResponseSuccess"
        }
      },
      "AccessMnemonicResponseError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AccessMnemonicResponseError"
        }
      },
      "AccessPrivateKeyRequestBody": {
        "type": "object",
        "properties": {
          "privateKey": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AccessPrivateKeyRequestBody"
        }
      },
      "AccessPrivateKeyResponseSuccess": {
        "type": "object",
        "properties": {
          "publicKey": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AccessPrivateKeyResponseSuccess"
        }
      },
      "AccessPrivateKeyResponseError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AccessPrivateKeyResponseError"
        }
      },
      "MineBlockRequestBody": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "MineBlockRequestBody"
        }
      },
      "Block": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "index": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "hash": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "previousHash": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "timestamp": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  }
                }
              },
              "transactions": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "xml": {
                      "name": "transaction"
                    },
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              },
              "validator": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "signature": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Block"
        }
      }
    }
  }
}